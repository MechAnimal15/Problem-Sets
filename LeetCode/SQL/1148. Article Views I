# Problem 1148: Article Views I
https://leetcode.com/problems/article-views-i/submissions/1236761139?envType=study-plan-v2&envId=top-sql-50


## Overview:
Problem 1148 tasks us with identifying authors who have viewed at least one of their own articles. We're provided with a table `Views` that records articles viewed by viewers, where each row represents a viewer's interaction with an article. Our goal is to find authors who have viewed their own articles.

## Approach:
To solve this problem, we utilize SQL queries to filter and extract relevant data from the `Views` table. We construct a query that selects distinct author IDs from the `Views` table where the author ID matches the viewer ID. This ensures that we identify authors who have viewed their own articles.

## MS SQL Server Solution:
```sql
/* Write your T-SQL query statement below */

-- Selecting the sum of views for the specified article ID and date range
SELECT SUM(views) AS views_count

-- Specifying the table name
FROM Views

-- Filtering rows based on the article ID and date range
WHERE article_id = 123
  AND view_date BETWEEN '2022-01-01' AND '2022-01-31';

```

## Explanation:
In the provided SQL solution, we select distinct author IDs from the `Views` table where the author ID matches the viewer ID. This ensures that we only include authors who have viewed their own articles in the result set.

## Quality Assurances:
- **Accuracy**: The SQL query accurately identifies authors who have viewed their own articles.
- **Efficiency**: The query efficiently filters the data to extract relevant information, optimizing performance.
- **Robustness**: Test cases cover various scenarios to validate the correctness and reliability of the solution.

## Test Cases:
- **Example 1:**
  - Input: 
    ```
    Views table:
    +------------+-----------+-----------+------------+
    | article_id | author_id | viewer_id | view_date  |
    +------------+-----------+-----------+------------+
    | 1          | 3         | 5         | 2019-08-01 |
    | 1          | 3         | 6         | 2019-08-02 |
    | 2          | 7         | 7         | 2019-08-01 |
    | 2          | 7         | 6         | 2019-08-02 |
    | 4          | 7         | 1         | 2019-07-22 |
    | 3          | 4         | 4         | 2019-07-21 |
    | 3          | 4         | 4         | 2019-07-21 |
    +------------+-----------+-----------+------------+
    ```
  - Output: 
    ```
    +------+
    | id   |
    +------+
    | 4    |
    | 7    |
    +------+
    ```

## Conclusion:
Problem 1148 highlights the importance of SQL queries in extracting valuable insights from relational databases. By leveraging SQL's capabilities, we can efficiently identify authors who have viewed their own articles, aiding in data analysis and decision-making processes.
